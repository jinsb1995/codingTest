
    Array, LinkedList, Stack, Queue ... 은 일직선 데이터 구조이다.

    tree는 부모 자식 관계를 가지는 구조이다.
    tree는 계층이 있고, 그룹이 있다.
    각 Node가 하나 이상의 Child를 가지고 있기 때문이다.

    특정한 순서에 의해서 데이터가 관리되는 경우가 있다.

    tree 맨 끝에 더이상 자식(child)이 없는 leaf(잎사귀)라고 부른다.


    Binary Tree ( 이진 트리 )
        - 자식이 최대 2개까지만 붙는 트리를 이진트리라고 한다.
        - 자식이 3개까지 붙은 트리는  ternary tree

        - 노드의 child가 두개씩만 붙어 있으면 된다.


    Binary Search Tree ( 이진 검색 트리 )
        - 노드의 왼쪽노드와 그 노드의 child들은 현재 노드보다 작아야 하고,
               오른쪽노드와 그 노드의 child들은 현재 노드보다 커야 한다.






    balance

        - 너무 한쪽으로 치우치지만 안으면 balance가 맞다
        - red-black tree
        - AVL tree


    unbalanced

        - 한쪽으로만 아예 치우쳐져 있으면 unbalanced하다.





    Complete Binary Tree  ( 완전 이진 트리 )

        - 마지막 level을 제외한 모든 레벨이 채워져 있는 트리
        - 마지막 level은 꼭 왼쪽부터 채워져야 한다.

    Full Binary Tree

        - 하나의 child를 가진 node가 없을 때
        - child가 아예 없거나,  두개 다 있거나



    Perfect Binary Tree ( 포화 이진 트리 )

        - 양쪽으로 빈 공간 없이 모든 노드가 2개의 자식을 가지고,
          level도 정확하게 딱 떨어지는 상태
          완벽한 피라미드 구조

        - 2^n - 1






















